{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAO,CACXC,WAAYC,SAASC,cAAc,kBACnCC,UAAWF,SAASC,cAAc,iBAClCE,YAAaH,SAASC,cAAc,mBACpCG,IAAKJ,SAASC,cAAc,WAG9BH,EAAKM,IAAIC,iBAAiB,SAM1B,SAAwBC,GACtBA,EAAEC,iBACFC,EAAQC,OAAOX,EAAKC,WAAWW,OAC/BC,EAAOF,OAAOX,EAAKI,UAAUQ,OAC7BE,EAASH,OAAOX,EAAKK,YAAYO,OAInC,SAA2BG,EAAOC,EAAMC,GACtC,IAAK,IAAIC,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCC,EAAcD,EAAGH,GACdK,KAAKC,GACLC,MAAMC,GACPR,GAASC,C,CARbQ,CAAkBd,EAAOG,EAAMC,E,IATjC,IAAIJ,EAAQ,EACRG,EAAO,EACPC,EAAS,EAmBb,SAASO,EAAUI,G,IAAEC,EAAFD,EAAEC,SAAUC,EAAZF,EAAYG,MAC7BC,EAAA/B,GAASgC,OAAOC,QAAQ,uBAAwCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,CAGxE,SAASJ,EAASE,G,IAAEC,EAAFD,EAAEC,SAAUO,EAAZR,EAAYG,MAC5BC,EAAA/B,GAASgC,OAAOI,QAAQ,sBAAqCF,OAAfN,EAAS,QAAYM,OAANC,EAAM,M,CAGrE,SAASd,EAAcO,EAAUS,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEX,WAAUE,MAAAO,IAEpBG,EAAO,CAAEZ,WAAUE,MAAAO,G,GACjBA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.5.min.css'\n\nconst refs = {\n  inputDelay: document.querySelector('[name = delay]'),\n  inputStep: document.querySelector('[name = step]'),\n  inputAmount: document.querySelector('[name = amount]'),\n  btn: document.querySelector('button'),\n}\n\nrefs.btn.addEventListener('click', collectingData);\n\nlet delay = 0;\nlet step = 0;\nlet amount = 0;\n\nfunction collectingData(e) {\n  e.preventDefault();\n  delay = Number(refs.inputDelay.value);\n  step = Number(refs.inputStep.value);\n  amount = Number(refs.inputAmount.value);\n  createAllPromises(delay, step, amount);\n}\n\nfunction createAllPromises(delay, step, amount) {\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(onResolve)\n      .catch(onReject);\n      delay += step;\n  }\n};\n\nfunction onResolve({ position, delay }) {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n};\n\nfunction onReject({ position, delay }) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }}, delay)\n    \n  })\n};\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","inputDelay","document","querySelector","inputStep","inputAmount","btn","addEventListener","e","preventDefault","$ce04d3a99e08e73b$var$delay","Number","value","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","delay1","step1","amount1","i","$ce04d3a99e08e73b$var$createPromise","then","$ce04d3a99e08e73b$var$onResolve","catch","$ce04d3a99e08e73b$var$onReject","$ce04d3a99e08e73b$var$createAllPromises","param","position","delay2","delay","$parcel$interopDefault","Notify","success","concat","delay3","failure","delay4","Promise","resolve","reject","shouldResolve","Math","random","setTimeout"],"version":3,"file":"03-promises.50c7c3b0.js.map"}